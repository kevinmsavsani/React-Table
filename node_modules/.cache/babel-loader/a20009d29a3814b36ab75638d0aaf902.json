{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/kevin/Git/React-Table/src/components/sortTable.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport { useTable, useSortBy } from 'react-table';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction Table({\n  columns,\n  data\n}) {\n  _s();\n\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }, useSortBy); // Render the UI for your table\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column =>\n          /*#__PURE__*/\n          // Add the sorting props to control sorting. For this example\n          // we can add them into the header props\n          _jsxDEV(\"th\", { ...column.getHeaderProps(column.getSortByToggleProps()),\n            children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: column.isSorted ? column.isSortedDesc ? ' ðŸ”½' : ' ðŸ”¼' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: rows.map((row, i) => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 45\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Showing the first 20 results of \", rows.length, \" rows\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Table, \"8ldCboQJiHYAoVRIjeUcfMipLaU=\", false, function () {\n  return [useTable];\n});\n\n_c = Table;\n\nfunction SortingTableComponent() {\n  _s2();\n\n  const columns = React.useMemo(() => [{\n    Header: 'Name',\n    columns: [{\n      Header: 'First Name',\n      accessor: 'firstName'\n    }, {\n      Header: 'Last Name',\n      accessor: 'lastName'\n    }]\n  }, {\n    Header: 'Info',\n    columns: [{\n      Header: 'Age',\n      accessor: 'age'\n    }, {\n      Header: 'Visits',\n      accessor: 'visits'\n    }, {\n      Header: 'Status',\n      accessor: 'status'\n    }, {\n      Header: 'Profile Progress',\n      accessor: 'progress'\n    }]\n  }], []);\n  const data = [{\n    \"firstName\": \"committee-c15dw\",\n    \"lastName\": \"editor-ktsjo\",\n    \"age\": 3,\n    \"visits\": 46,\n    \"progress\": 75,\n    \"status\": \"relationship\"\n  }, {\n    \"firstName\": \"midnight-wad0y\",\n    \"lastName\": \"data-7h4xf\",\n    \"age\": 1,\n    \"visits\": 56,\n    \"progress\": 15,\n    \"status\": \"complicated\"\n  }, {\n    \"firstName\": \"tree-sbdb0\",\n    \"lastName\": \"friendship-w8535\",\n    \"age\": 1,\n    \"visits\": 45,\n    \"progress\": 66,\n    \"status\": \"single\"\n  }, {\n    \"firstName\": \"chin-borr8\",\n    \"lastName\": \"shirt-zox8m\",\n    \"age\": 0,\n    \"visits\": 25,\n    \"progress\": 67,\n    \"status\": \"complicated\"\n  }, {\n    \"firstName\": \"women-83ef0\",\n    \"lastName\": \"chalk-e8xbk\",\n    \"age\": 9,\n    \"visits\": 28,\n    \"progress\": 23,\n    \"status\": \"relationship\"\n  }, {\n    \"firstName\": \"women-83ef0\",\n    \"lastName\": \"chalk-e8xbk\",\n    \"age\": 9,\n    \"visits\": 28,\n    \"progress\": 23,\n    \"status\": \"relationship\"\n  }, {\n    \"firstName\": \"women-83ef0\",\n    \"lastName\": \"chalk-e8xbk\",\n    \"age\": 9,\n    \"visits\": 28,\n    \"progress\": 23,\n    \"status\": \"relationship\"\n  }, {\n    \"firstName\": \"women-83ef0\",\n    \"lastName\": \"chalk-e8xbk\",\n    \"age\": 9,\n    \"visits\": 28,\n    \"progress\": 23,\n    \"status\": \"relationship\"\n  }];\n  console.log(JSON.stringify(data));\n  return /*#__PURE__*/_jsxDEV(Table, {\n    columns: columns,\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(SortingTableComponent, \"erkfbBpUuAY09jdvhSOqc0XsEHQ=\");\n\n_c2 = SortingTableComponent;\nexport default SortingTableComponent;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Table\");\n$RefreshReg$(_c2, \"SortingTableComponent\");","map":{"version":3,"sources":["/home/kevin/Git/React-Table/src/components/sortTable.js"],"names":["React","useTable","useSortBy","Table","columns","data","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps","length","SortingTableComponent","useMemo","Header","accessor","console","log","JSON","stringify"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { useTable, useSortBy } from 'react-table'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction Table({ columns, data }) {\n    // Use the state and functions returned from useTable to build your UI\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n    } = useTable(\n        {\n            columns,\n            data,\n        },\n        useSortBy\n    )\n\n    // Render the UI for your table\n    return (\n        <div>\n            <table className=\"table\" {...getTableProps()}>\n                <thead>\n                    {headerGroups.map(headerGroup => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {headerGroup.headers.map(column => (\n                                // Add the sorting props to control sorting. For this example\n                                // we can add them into the header props\n                                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                                    {column.render('Header')}\n                                    {/* Add a sort direction indicator */}\n                                    <span>\n                                        {column.isSorted\n                                            ? column.isSortedDesc\n                                                ? ' ðŸ”½'\n                                                : ' ðŸ”¼'\n                                            : ''}\n                                    </span>\n                                </th>\n                            ))}\n                        </tr>\n                    ))}\n                </thead>\n                <tbody {...getTableBodyProps()}>\n                    {rows.map(\n                        (row, i) => {\n                            prepareRow(row);\n                            return (\n                                <tr {...row.getRowProps()}>\n                                    {row.cells.map(cell => {\n                                        return (\n                                            <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                        )\n                                    })}\n                                </tr>\n                            )\n                        }\n                    )}\n                </tbody>\n            </table>\n            <br />\n            <div>Showing the first 20 results of {rows.length} rows</div>\n        </div >\n    )\n}\n\nfunction SortingTableComponent() {\n    const columns = React.useMemo(\n        () => [\n            {\n                Header: 'Name',\n                columns: [\n                    {\n                        Header: 'First Name',\n                        accessor: 'firstName',\n                    },\n                    {\n                        Header: 'Last Name',\n                        accessor: 'lastName',\n                    },\n                ],\n            },\n            {\n                Header: 'Info',\n                columns: [\n                    {\n                        Header: 'Age',\n                        accessor: 'age',\n                    },\n                    {\n                        Header: 'Visits',\n                        accessor: 'visits',\n                    },\n                    {\n                        Header: 'Status',\n                        accessor: 'status',\n                    },\n                    {\n                        Header: 'Profile Progress',\n                        accessor: 'progress',\n                    },\n                ],\n            },\n        ],\n        []\n    )\n\n    const data = [\n        {\n            \"firstName\": \"committee-c15dw\",\n            \"lastName\": \"editor-ktsjo\",\n            \"age\": 3,\n            \"visits\": 46,\n            \"progress\": 75,\n            \"status\": \"relationship\"\n        },\n        {\n            \"firstName\": \"midnight-wad0y\",\n            \"lastName\": \"data-7h4xf\",\n            \"age\": 1,\n            \"visits\": 56,\n            \"progress\": 15,\n            \"status\": \"complicated\"\n        },\n        {\n            \"firstName\": \"tree-sbdb0\",\n            \"lastName\": \"friendship-w8535\",\n            \"age\": 1,\n            \"visits\": 45,\n            \"progress\": 66,\n            \"status\": \"single\"\n        },\n        {\n            \"firstName\": \"chin-borr8\",\n            \"lastName\": \"shirt-zox8m\",\n            \"age\": 0,\n            \"visits\": 25,\n            \"progress\": 67,\n            \"status\": \"complicated\"\n        },\n        {\n            \"firstName\": \"women-83ef0\",\n            \"lastName\": \"chalk-e8xbk\",\n            \"age\": 9,\n            \"visits\": 28,\n            \"progress\": 23,\n            \"status\": \"relationship\"\n        },\n        {\n            \"firstName\": \"women-83ef0\",\n            \"lastName\": \"chalk-e8xbk\",\n            \"age\": 9,\n            \"visits\": 28,\n            \"progress\": 23,\n            \"status\": \"relationship\"\n        },\n        {\n            \"firstName\": \"women-83ef0\",\n            \"lastName\": \"chalk-e8xbk\",\n            \"age\": 9,\n            \"visits\": 28,\n            \"progress\": 23,\n            \"status\": \"relationship\"\n        },\n        {\n            \"firstName\": \"women-83ef0\",\n            \"lastName\": \"chalk-e8xbk\",\n            \"age\": 9,\n            \"visits\": 28,\n            \"progress\": 23,\n            \"status\": \"relationship\"\n        }]\n    console.log(JSON.stringify(data));\n\n\n    return (\n        <Table columns={columns} data={data} />\n    )\n}\n\nexport default SortingTableComponent;"]},"metadata":{},"sourceType":"module"}